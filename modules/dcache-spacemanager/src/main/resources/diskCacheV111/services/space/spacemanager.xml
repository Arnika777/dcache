<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">

  <context:property-placeholder/>
  <context:annotation-config/>

  <bean id="noroutetocell" class="org.dcache.cells.LogNoRouteToCellExceptionReceiver">
      <description>Undeliverable message logger</description>
      <property name="excludedMessages" value="org.dcache.poolmanager.PoolMgrGetUpdatedHandler"/>
  </bean>

  <bean id="executor"
        class="java.util.concurrent.Executors"
        factory-method="newCachedThreadPool"
        destroy-method="shutdown">
      <description>Thread pool for message processing</description>
  </bean>

  <bean id="pool-manager-stub" class="org.dcache.cells.CellStub">
    <description>Pool manager communication stub</description>
    <property name="destination" value="${spacemanager.service.poolmanager}"/>
    <property name="timeout" value="${spacemanager.service.poolmanager.timeout}"/>
    <property name="timeoutUnit" value="${spacemanager.service.poolmanager.timeout.unit}"/>
  </bean>

    <bean id="pool-manager-handler" class="org.dcache.poolmanager.PoolManagerHandlerSubscriber">
        <description>Pool manager client</description>
        <property name="poolManager" ref="pool-manager-stub"/>
    </bean>

  <bean id="pool-monitor" class="org.dcache.poolmanager.RemotePoolMonitor">
    <description>Maintains runtime information about all pools</description>
    <property name="poolManagerStub" ref="pool-manager-stub"/>
  </bean>

  <bean id="pnfs-stub" class="org.dcache.cells.CellStub">
    <description>PNFS manager communication stub</description>
    <property name="destination" value="${spacemanager.service.pnfsmanager}"/>
    <property name="timeout" value="${spacemanager.service.pnfsmanager.timeout}"/>
    <property name="timeoutUnit" value="${spacemanager.service.pnfsmanager.timeout.unit}"/>
    <property name="flags" value="#{ T(dmg.cells.nucleus.CellEndpoint.SendFlag).RETRY_ON_NO_ROUTE_TO_CELL }"/>
  </bean>

  <bean id="pnfs" class="diskCacheV111.util.PnfsHandler">
    <description>PNFS manager client module</description>
    <constructor-arg ref="pnfs-stub"/>
  </bean>


    <bean id="data-source" class="org.dcache.db.AlarmEnabledDataSource" destroy-method="close">
        <description>Database connection pool</description>
        <constructor-arg value="${spacemanager.db.url}"/>
        <constructor-arg value="SpaceManager"/>
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariDataSource">
                <constructor-arg>
                    <bean class="com.zaxxer.hikari.HikariConfig">
                        <constructor-arg>
                            <bean class="org.dcache.util.configuration.ConfigurationPropertiesFactoryBean">
                                <property name="prefix" value="spacemanager.db.hikari-properties"/>
                                <property name="staticEnvironment">
                                    <map>
                                        <entry key="jdbcUrl" value="${spacemanager.db.url}"/>
                                        <entry key="username" value="${spacemanager.db.user}"/>
                                        <entry key="password" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${spacemanager.db.password.file}', '${spacemanager.db.url}', '${spacemanager.db.user}', '${spacemanager.db.password}') }"/>
                                        <entry key="minimumIdle" value="${spacemanager.db.connections.idle}"/>
                                        <entry key="maximumPoolSize" value="${spacemanager.db.connections.max}"/>
                                        <entry key="autoCommit" value="true"/>
                                        <entry key="transactionIsolation" value="TRANSACTION_READ_COMMITTED"/>
                                    </map>
                               </property>
                            </bean>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
        <description>Database schema manager</description>
        <property name="dataSource" ref="data-source"/>
        <property name="changeLog" value="classpath:${spacemanager.db.schema.changelog}"/>
        <property name="shouldUpdate" value="${spacemanager.db.schema.auto}"/>
    </bean>

  <bean id="tx-manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <description>Database transaction manager</description>
        <property name="dataSource" ref="data-source"/>
  </bean>

  <bean id="tx-annotation-processor" class="org.dcache.util.aspects.PerInstanceAnnotationTransactionBeanPostProcessor">
      <description>Annotated transaction demarcation processor</description>
      <property name="transactionManager" ref="tx-manager"/>
  </bean>

  <bean id="authz-policy" class="diskCacheV111.services.space.SimpleSpaceManagerAuthorizationPolicy"/>

  <bean id="database" class="diskCacheV111.services.space.JdbcSpaceManagerDatabase"
        init-method="init" depends-on="liquibase">
      <property name="dataSource" ref="data-source"/>
  </bean>

  <bean id="linkgroup-loader" class="diskCacheV111.services.space.LinkGroupLoader"
      init-method="start" destroy-method="stop">
    <property name="database" ref="database"/>
    <property name="poolMonitor" ref="pool-monitor"/>
    <property name="updateLinkGroupsPeriod"
              value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                     ${spacemanager.link-groups-update.period},
                    '${spacemanager.link-groups-update.period.unit}')}" />
    <property name="authorizationFileName" value="${spacemanager.authz.link-group-file-name}" />
  </bean>

  <bean id="cli" class="diskCacheV111.services.space.SpaceManagerCommandLineInterface">
    <property name="database" ref="database"/>
    <property name="linkGroupLoader" ref="linkgroup-loader"/>
    <property name="pnfs" ref="pnfs"/>
    <property name="executor" ref="executor"/>
  </bean>

    <bean id="spacemanager" class="diskCacheV111.services.space.SpaceManagerService"
          init-method="start" destroy-method="stop">
        <description>Space manager</description>
        <property name="database" ref="database"/>
        <property name="linkGroupLoader" ref="linkgroup-loader"/>
        <property name="pnfsHandler" ref="pnfs"/>
        <property name="poolManager" value="${spacemanager.service.poolmanager}"/>
        <property name="poolMonitor" ref="pool-monitor"/>
        <property name="maxThreads" value="${spacemanager.limits.threads}"/>
        <property name="executor" ref="executor"/>
        <property name="perishedSpacePurgeDelay"
                  value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                       ${spacemanager.perished-space-purge-delay},
                       '${spacemanager.perished-space-purge-delay.unit}')}"/>
        <property name="spaceManagerEnabled"
                  value="${spacemanager.enable.space-reservation}"/>
        <property name="expireSpaceReservationsPeriod"
                  value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                       ${spacemanager.expire-space-reservation.period},
                       '${spacemanager.expire-space-reservation.period.unit}')}"/>
        <property name="allowUnreservedUploadsToLinkGroups"
                  value="${spacemanager.enable.unreserved-uploads-to-linkgroups}"/>
        <property name="shouldDeleteStoredFileRecord" value="false"/>
        <property name="shouldReturnFlushedSpaceToReservation" value="true"/>
        <property name="authorizationPolicy" ref="authz-policy"/>
        <property name="poolManagerHandler" ref="pool-manager-handler"/>
        <property name="serviceAddress" value="${spacemanager.cell.service}"/>
    </bean>
</beans>
